tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18461
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=1
+ [[ 1 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 1 -lt 1 ']'
+ '[' 1 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 1 -eq 1 ']'
+ echo -e '\nExecuting step 1'

Executing step 1
++ echo w http://209-107-204-129.mia.as54203.net:8080
++ cut -f1 '-d '
+ uType=w
++ echo w http://209-107-204-129.mia.as54203.net:8080
++ cut -f2 '-d '
+ uSite=http://209-107-204-129.mia.as54203.net:8080
+ case ${uType} in
+ wget -t 1 -w 5 -O - http://209-107-204-129.mia.as54203.net:8080
--2023-09-07 23:18:18--  http://209-107-204-129.mia.as54203.net:8080/
Resolving 209-107-204-129.mia.as54203.net (209-107-204-129.mia.as54203.net)... 209.107.204.129
Connecting to 209-107-204-129.mia.as54203.net (209-107-204-129.mia.as54203.net)|209.107.204.129|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 109 [text/html]
Saving to: ‘STDOUT’

     0K                                                       100% 5.53M=0s

2023-09-07 23:18:18 (5.53 MB/s) - written to stdout [109/109]

+ uRC=0
+ line_number=2
+ read -r line
+ '[' 1 -eq 2 ']'
+ line_number=3
+ read -r line
+ '[' 1 -eq 3 ']'
+ line_number=4
+ read -r line
+ '[' 1 -eq 4 ']'
+ line_number=5
+ read -r line
+ '[' 1 -eq 5 ']'
+ line_number=6
+ read -r line
+ '[' 1 -eq 6 ']'
+ line_number=7
+ read -r line
+ '[' 1 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 1 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 1 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 1 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 1 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 1 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 1 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 1 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 1 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 1 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 1 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 1 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 1 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 1 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 1 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 1 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 1 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 1 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 1 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 1 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=2
+ fSaveStepNum
+ echo 2
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:18:19 PM AST 2023
Thu Sep 7 11:18:19 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143
tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18576
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=2
+ [[ 2 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 2 -lt 1 ']'
+ '[' 2 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 2 -eq 1 ']'
+ line_number=2
+ read -r line
+ '[' 2 -eq 2 ']'
+ echo -e '\nExecuting step 2'

Executing step 2
++ echo w http://speedtestfl.gethotwired.com:8080
++ cut -f1 '-d '
+ uType=w
++ echo w http://speedtestfl.gethotwired.com:8080
++ cut -f2 '-d '
+ uSite=http://speedtestfl.gethotwired.com:8080
+ case ${uType} in
+ wget -t 1 -w 5 -O - http://speedtestfl.gethotwired.com:8080
--2023-09-07 23:18:20--  http://speedtestfl.gethotwired.com:8080/
Resolving speedtestfl.gethotwired.com (speedtestfl.gethotwired.com)... 96.8.1.18
Connecting to speedtestfl.gethotwired.com (speedtestfl.gethotwired.com)|96.8.1.18|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 109 [text/html]
Saving to: ‘STDOUT’

     0K                                                       100% 4.98M=0s

2023-09-07 23:18:20 (4.98 MB/s) - written to stdout [109/109]

+ uRC=0
+ line_number=3
+ read -r line
+ '[' 2 -eq 3 ']'
+ line_number=4
+ read -r line
+ '[' 2 -eq 4 ']'
+ line_number=5
+ read -r line
+ '[' 2 -eq 5 ']'
+ line_number=6
+ read -r line
+ '[' 2 -eq 6 ']'
+ line_number=7
+ read -r line
+ '[' 2 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 2 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 2 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 2 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 2 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 2 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 2 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 2 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 2 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 2 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 2 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 2 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 2 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 2 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 2 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 2 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 2 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 2 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 2 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 2 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=3
+ fSaveStepNum
+ echo 3
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:18:30 PM AST 2023
Thu Sep 7 11:18:30 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143
tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18613
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=3
+ [[ 3 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 3 -lt 1 ']'
+ '[' 3 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 3 -eq 1 ']'
+ line_number=2
+ read -r line
+ '[' 3 -eq 2 ']'
+ line_number=3
+ read -r line
+ '[' 3 -eq 3 ']'
+ echo -e '\nExecuting step 3'

Executing step 3
++ cut -f1 '-d '
++ echo w http://clients3.google.com/generate_204
+ uType=w
++ echo w http://clients3.google.com/generate_204
++ cut -f2 '-d '
+ uSite=http://clients3.google.com/generate_204
+ case ${uType} in
+ wget -t 1 -w 5 -O - http://clients3.google.com/generate_204
--2023-09-07 23:20:30--  http://clients3.google.com/generate_204
Resolving clients3.google.com (clients3.google.com)... 142.250.189.142, 2607:f8b0:4008:809::200e
Connecting to clients3.google.com (clients3.google.com)|142.250.189.142|:80... connected.
HTTP request sent, awaiting response... 204 No Content
2023-09-07 23:20:31 (0.00 B/s) - written to stdout [0]

+ uRC=0
+ line_number=4
+ read -r line
+ '[' 3 -eq 4 ']'
+ line_number=5
+ read -r line
+ '[' 3 -eq 5 ']'
+ line_number=6
+ read -r line
+ '[' 3 -eq 6 ']'
+ line_number=7
+ read -r line
+ '[' 3 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 3 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 3 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 3 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 3 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 3 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 3 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 3 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 3 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 3 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 3 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 3 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 3 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 3 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 3 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 3 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 3 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 3 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 3 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 3 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=4
+ fSaveStepNum
+ echo 4
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:20:32 PM AST 2023
Thu Sep 7 11:20:32 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143
tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18729
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=4
+ [[ 4 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 4 -lt 1 ']'
+ '[' 4 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 4 -eq 1 ']'
+ line_number=2
+ read -r line
+ '[' 4 -eq 2 ']'
+ line_number=3
+ read -r line
+ '[' 4 -eq 3 ']'
+ line_number=4
+ read -r line
+ '[' 4 -eq 4 ']'
+ echo -e '\nExecuting step 4'

Executing step 4
++ echo w http://server-12215.prod.hosts.ooklaserver.net:8080
++ cut -f1 '-d '
+ uType=w
++ cut -f2 '-d '
++ echo w http://server-12215.prod.hosts.ooklaserver.net:8080
+ uSite=http://server-12215.prod.hosts.ooklaserver.net:8080
+ case ${uType} in
+ wget -t 1 -w 5 -O - http://server-12215.prod.hosts.ooklaserver.net:8080
--2023-09-07 23:20:32--  http://server-12215.prod.hosts.ooklaserver.net:8080/
Resolving server-12215.prod.hosts.ooklaserver.net (server-12215.prod.hosts.ooklaserver.net)... 64.251.0.178, 2607:feb8::802
Connecting to server-12215.prod.hosts.ooklaserver.net (server-12215.prod.hosts.ooklaserver.net)|64.251.0.178|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 109 [text/html]
Saving to: ‘STDOUT’

     0K                                                       100% 4.46M=0s

2023-09-07 23:20:33 (4.46 MB/s) - written to stdout [109/109]

+ uRC=0
+ line_number=5
+ read -r line
+ '[' 4 -eq 5 ']'
+ line_number=6
+ read -r line
+ '[' 4 -eq 6 ']'
+ line_number=7
+ read -r line
+ '[' 4 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 4 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 4 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 4 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 4 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 4 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 4 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 4 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 4 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 4 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 4 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 4 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 4 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 4 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 4 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 4 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 4 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 4 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 4 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 4 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=5
+ fSaveStepNum
+ echo 5
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:20:42 PM AST 2023
Thu Sep 7 11:20:42 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143

tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18768
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=5
+ [[ 5 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 5 -lt 1 ']'
+ '[' 5 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 5 -eq 1 ']'
+ line_number=2
+ read -r line
+ '[' 5 -eq 2 ']'
+ line_number=3
+ read -r line
+ '[' 5 -eq 3 ']'
+ line_number=4
+ read -r line
+ '[' 5 -eq 4 ']'
+ line_number=5
+ read -r line
+ '[' 5 -eq 5 ']'
+ echo -e '\nExecuting step 5'

Executing step 5
++ echo w https://fireoscaptiveportal.com/generate_204
++ cut -f1 '-d '
+ uType=w
++ echo w https://fireoscaptiveportal.com/generate_204
++ cut -f2 '-d '
+ uSite=https://fireoscaptiveportal.com/generate_204
+ case ${uType} in
+ wget -t 1 -w 5 -O - https://fireoscaptiveportal.com/generate_204
--2023-09-07 23:21:55--  https://fireoscaptiveportal.com/generate_204
Resolving fireoscaptiveportal.com (fireoscaptiveportal.com)... 3.231.235.210, 52.44.63.47, 3.222.89.104, ...
Connecting to fireoscaptiveportal.com (fireoscaptiveportal.com)|3.231.235.210|:443... connected.
HTTP request sent, awaiting response... 204 No Content
2023-09-07 23:21:56 (0.00 B/s) - written to stdout [0]

+ uRC=0
+ line_number=6
+ read -r line
+ '[' 5 -eq 6 ']'
+ line_number=7
+ read -r line
+ '[' 5 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 5 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 5 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 5 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 5 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 5 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 5 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 5 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 5 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 5 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 5 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 5 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 5 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 5 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 5 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 5 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 5 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 5 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 5 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 5 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=6
+ fSaveStepNum
+ echo 6
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:21:57 PM AST 2023
Thu Sep 7 11:21:57 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143
tail: /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.log: file truncated

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 23, 2023
### Updated: June 28, 2023
### bash script to daemonize the Internet Connectivity Check
### Used as the ExecStart= parameter of the uSysIntChkd@.service
### WHEN INITIATED BY SYSTEMD ALWAYS EXECUTE IN THE --user SYSTEMD CONTEXT.
### USAGE: scriptname

### Define fCleanup before using it in the trap statement.
function fCleanup()
{
   uRC=$?
   echo `date`;
   case ${uRC} in
      0) echo "Exit thru normal exit logic.  RC=${uRC}";;
      129) echo "SIGHUP signal caught.  RC=${uRC}";;
      130) echo "SIGINT signal caught.  RC=${uRC}";;
      131) echo "SIGQUIT signal caught.  RC=${uRC}";;
      134) echo "SIGABRT signal caught.  RC=${uRC}";;
      137) echo "SIGKILL signal caught.  RC=${uRC}";;
      143) echo "SIGTERM signal caught.  RC=${uRC}";;
      149) echo "SIGSTOP signal caught.  RC=${uRC}";;
      152) echo "SIGXCPU signal caught.  RC=${uRC}";;
      153) echo "SIGXFSZ signal caught.  RC=${uRC}";;
      154) echo "SIGVTALRM signal caught.  RC=${uRC}";;
      155) echo "SIGPROF signal caught.  RC=${uRC}";;
      156) echo "SIGPWR signal caught.  RC=${uRC}";;
      *) echo "Unknown signal caught.  RC=${uRC}";;
   esac

   if [ -f ${pidfile} ];
   then
      rm ${pidfile}
   fi

   exit ${uRC}
}

# Trap signals.
trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR
+ trap fCleanup SIGHUP SIGINT SIGQUIT SIGABRT SIGKILL SIGTERM SIGSTOP SIGXCPU SIGXFSZ SIGVTALRM SIGPROF SIGPWR


############### FUNCTION DEFINITIONS: BEGIN ###############
function fInit() 
{
   cd ~/.config/uSysIntChkd

   source ./`basename ${0:0:-5}`.ini $0
   
   if [ ! -d $dir ]; then
       echo "$0: Abort.  User runtime directory $dir does not exist."
       exit 1
   fi

   if [ ${#procs[@]} -gt 1 ]; then
	   echo "Daemon already running (${#procs[@]})"
      exit 2
   fi

   if [ ! -f $pidfile ]; then
      echo $$ > $pidfile
   fi
   
   ### Clean output file before starting execution
   if [ -f ${uOut} ];
   then
      rm ${uOut} 2> /dev/null
   fi

   # Save the total number of lines on the steps_file, as an integer.
   declare -g num_steps=$(awk 'END {print int($1)}' "$steps_file")

}

function fValidate()
{
   # Check the steps file
   if [ ! -f $steps_file ];
   then
      echo "Abort.  $steps_file does not exist";
      exit 3
   fi
   
   # Check the step_number file
   declare -g step_number_file="./${uCmd}.next"
   if [ ! -f $step_number_file ];
   then
      echo "Abort.  $step_number_file does not exist";
      exit 4
   fi
   
   # Get the current value of the step number
   declare -g step_number=$(cat $step_number_file)
   
   # Validate the step number
   if ! [[ "${step_number}" =~ ^[0-9]+$ ]]; 
   then
	   echo "The step number ("${step_number}") must be a number."
     exit 5
   fi
}

function fSaveStepNum()
{
   # Save the current value of the step number to a file
   echo "${step_number}" > $step_number_file
}

function fCheckStepNumber()
{
   num_steps=`wc -l < "$steps_file"`
   if [ "${step_number}" -lt 1 ] || [ "${step_number}" -gt "${num_steps}" ]; 
   then
      step_number=1
      fSaveStepNum;
   fi
}

function fReadStepsAndCheck()
{
   # Read the steps from the file
   declare -g uRC=0
   declare -g line_number=1
   while read -r line; do
       if [ "${step_number}" -eq "${line_number}" ];
       then
          echo -e "\nExecuting step ${step_number}"
	  uType=`echo $line|cut -f1 -d" "`;
	  uSite=`echo $line|cut -f2 -d" "`;
	  case ${uType} in
	    w) wget -t 1 -w 5 -O - ${uSite} > $uOut ;;
	    p) ping -c 1 -s 1 ${uSite} > $uOut ;;
	    *) echo "$0: Error with site ${uSite} in steps file" > $uOut ;;
	  esac
### Changed logic to avoid executing commands from an ini file.
#          eval "$line" > $uOut
          uRC=$?
       fi
       line_number=$((line_number +1))
   done < "$steps_file"
}

function fSendAlert()
{
   if [ "$uRC" -ne 0 ]; 
   then
      ### When confirmed down, check for connectivity and issue alert
      uConnStat=down
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
      ### Loop until connectivity returns
      while [ "$uRC" -ne 0 ];
      do
         sleep $uPingWait;
         fIncrementStep;
         fSaveStepNum;
         fCheckStepNumber;
         fReadStepsAndCheck;
      done
      ### Connectivity has returned.   Send the alert
      uConnStat=up
      sleep $uPingWait;
      source /usr/local/u/bin/jjchkconn-send-alerts2slack.bash $(whoami) "`hostname` $0 Error: $line failed.  Loss of connectivity is confirmed. `cat $uOut`"
   fi
}

function fTestRC()
{
   if [ "$uRC" -ne 0 ]; then
      echo "`hostname` $0 Error: $line failed.  Loss of connectivity is possible.  `cat $uOut`"
      ### When loss of connectivity is suspected, check connectivity a 2nd time
      fIncrementStep;
      fSaveStepNum;
      fCheckStepNumber;
      fReadStepsAndCheck;
      fSendAlert;
   else
      uConnStat=up
   fi
}

function fIncrementStep()
{
   ### Increment to the next step
   step_number=$((step_number + 1))
}
############### FUNCTION DEFINITIONS:  END  ###############

### Initialize all variables and validate all files and directories

umask 006
+ umask 006

fInit;
+ fInit
+ cd /home/jjchkconn/.config/uSysIntChkd
++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
+ source ./jjchkconn-uSysIntChkd.ini /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
#!/bin/bash

### Author: Pedro Serrano, jj10 Net LLC, Bayamon, PR
### Created: June 27, 2023
### Updated: August 23, 2023

### USAGE:	inifilename [$0]
###		Pass the parent script name to this script

############## MODIFY AT YOUR OWN RISK #####################

### Seconds between Connection Checks
declare -g uSleep=60
++ declare -g uSleep=60

### Seconds between Alerts
declare -g uSleepAfterAlert=3600
++ declare -g uSleepAfterAlert=3600

declare -g uPingCount=1
++ declare -g uPingCount=1
declare -g uPingWait=10
++ declare -g uPingWait=10
declare -g uSleepAfterOK=20
++ declare -g uSleepAfterOK=20


############## DO NOT MODIFY SETTINGS BELOW ##################

### Connectivity Status
declare -g uConnStat=up
++ declare -g uConnStat=up

### Prefix of script being executed
declare -g uCmd=`basename ${1:0:-5}`
+++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd
++ declare -g uCmd=jjchkconn-uSysIntChkd

### User runtime directory
declare -g dir=~/.config/systemd/user
++ declare -g dir=/home/jjchkconn/.config/systemd/user

### Check if the daemon is already running using pidof
declare -g procs=`pidof $(basename $0)`
++++ basename /usr/local/u/bin/jjchkconn-uSysIntChkd.bash
+++ pidof jjchkconn-uSysIntChkd.bash
++ declare -g procs=

declare -g pidfile=$dir/${uCmd}.pid
++ declare -g pidfile=/home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid

## Output of this script will be redirected to this file
declare -g uOut=./${uCmd}.output
++ declare -g uOut=./jjchkconn-uSysIntChkd.output

# Get the number of steps
declare -g steps_file="./${uCmd}.steps"
++ declare -g steps_file=./jjchkconn-uSysIntChkd.steps
+ '[' '!' -d /home/jjchkconn/.config/systemd/user ']'
+ '[' 1 -gt 1 ']'
+ '[' '!' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
+ echo 18887
+ '[' -f ./jjchkconn-uSysIntChkd.output ']'
+ rm ./jjchkconn-uSysIntChkd.output
++ awk 'END {print int($1)}' ./jjchkconn-uSysIntChkd.steps
+ declare -g num_steps=0
fValidate;
+ fValidate
+ '[' '!' -f ./jjchkconn-uSysIntChkd.steps ']'
+ declare -g step_number_file=./jjchkconn-uSysIntChkd.next
+ '[' '!' -f ./jjchkconn-uSysIntChkd.next ']'
++ cat ./jjchkconn-uSysIntChkd.next
+ declare -g step_number=6
+ [[ 6 =~ ^[0-9]+$ ]]

while :
do
   fCheckStepNumber;
   fReadStepsAndCheck;
   fTestRC;
   fIncrementStep;
   fSaveStepNum;
   sleep $uSleep
done
+ :
+ fCheckStepNumber
++ wc -l
+ num_steps=26
+ '[' 6 -lt 1 ']'
+ '[' 6 -gt 26 ']'
+ fReadStepsAndCheck
+ declare -g uRC=0
+ declare -g line_number=1
+ read -r line
+ '[' 6 -eq 1 ']'
+ line_number=2
+ read -r line
+ '[' 6 -eq 2 ']'
+ line_number=3
+ read -r line
+ '[' 6 -eq 3 ']'
+ line_number=4
+ read -r line
+ '[' 6 -eq 4 ']'
+ line_number=5
+ read -r line
+ '[' 6 -eq 5 ']'
+ line_number=6
+ read -r line
+ '[' 6 -eq 6 ']'
+ echo -e '\nExecuting step 6'

Executing step 6
++ echo w http://tigobo.ecatel.us:8080
++ cut -f1 '-d '
+ uType=w
++ echo w http://tigobo.ecatel.us:8080
++ cut -f2 '-d '
+ uSite=http://tigobo.ecatel.us:8080
+ case ${uType} in
+ wget -t 1 -w 5 -O - http://tigobo.ecatel.us:8080
--2023-09-07 23:21:57--  http://tigobo.ecatel.us:8080/
Resolving tigobo.ecatel.us (tigobo.ecatel.us)... 45.77.117.247, 2001:19f0:9002:a78:e436:52ff:fec5:ce6e
Connecting to tigobo.ecatel.us (tigobo.ecatel.us)|45.77.117.247|:8080... connected.
HTTP request sent, awaiting response... 200 OK
Length: 109 [text/html]
Saving to: ‘STDOUT’

     0K                                                       100% 4.05M=0s

2023-09-07 23:21:57 (4.05 MB/s) - written to stdout [109/109]

+ uRC=0
+ line_number=7
+ read -r line
+ '[' 6 -eq 7 ']'
+ line_number=8
+ read -r line
+ '[' 6 -eq 8 ']'
+ line_number=9
+ read -r line
+ '[' 6 -eq 9 ']'
+ line_number=10
+ read -r line
+ '[' 6 -eq 10 ']'
+ line_number=11
+ read -r line
+ '[' 6 -eq 11 ']'
+ line_number=12
+ read -r line
+ '[' 6 -eq 12 ']'
+ line_number=13
+ read -r line
+ '[' 6 -eq 13 ']'
+ line_number=14
+ read -r line
+ '[' 6 -eq 14 ']'
+ line_number=15
+ read -r line
+ '[' 6 -eq 15 ']'
+ line_number=16
+ read -r line
+ '[' 6 -eq 16 ']'
+ line_number=17
+ read -r line
+ '[' 6 -eq 17 ']'
+ line_number=18
+ read -r line
+ '[' 6 -eq 18 ']'
+ line_number=19
+ read -r line
+ '[' 6 -eq 19 ']'
+ line_number=20
+ read -r line
+ '[' 6 -eq 20 ']'
+ line_number=21
+ read -r line
+ '[' 6 -eq 21 ']'
+ line_number=22
+ read -r line
+ '[' 6 -eq 22 ']'
+ line_number=23
+ read -r line
+ '[' 6 -eq 23 ']'
+ line_number=24
+ read -r line
+ '[' 6 -eq 24 ']'
+ line_number=25
+ read -r line
+ '[' 6 -eq 25 ']'
+ line_number=26
+ read -r line
+ '[' 6 -eq 26 ']'
+ line_number=27
+ read -r line
+ fTestRC
+ '[' 0 -ne 0 ']'
+ uConnStat=up
+ fIncrementStep
+ step_number=7
+ fSaveStepNum
+ echo 7
+ sleep 60
Terminated
fCleanup
++ fCleanup
++ uRC=143
+++ date
++ echo Thu Sep 7 11:22:07 PM AST 2023
Thu Sep 7 11:22:07 PM AST 2023
++ case ${uRC} in
++ echo 'SIGTERM signal caught.  RC=143'
SIGTERM signal caught.  RC=143
++ '[' -f /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid ']'
++ rm /home/jjchkconn/.config/systemd/user/jjchkconn-uSysIntChkd.pid
++ exit 143

